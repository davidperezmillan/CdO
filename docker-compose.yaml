version: '3.8'

services:
  infoshow:
    image: infoshowseries # Nombre de la imagen resultante
    build:
      context: CdOInfoShowService/.  # Usa el directorio actual como contexto para encontrar el Dockerfile
      dockerfile: Dockerfile  # Nombre del Dockerfile
    ports:
      - "8080:8080"  # Mapea el puerto del contenedor al puerto del host
    depends_on:
      - mariadb
    container_name: Info_Show # Nombre del contenedor
    networks:
      - 'docker-cdo-network' # Conecta el contenedor a la red CdO_Network  

  videostore:
    image: videostore # Nombre de la imagen resultante
    build:
      context: CdOVideoStoreService/.  # Usa el directorio actual como contexto para encontrar el Dockerfile
      dockerfile: Dockerfile  # Nombre del Dockerfile
    ports:
      - "8081:8080"  # Mapea el puerto del contenedor al puerto del host
    depends_on:
      - mariadb
    container_name: Video_Store # Nombre del contenedor
    networks:
      - 'docker-cdo-network' # Conecta el contenedor a la red CdO_Network  

  mariadb:
    image: ghcr.io/linuxserver/mariadb
    container_name: mariadb_cdo
    environment:
      - PUID=1000
      - PGID=1000
      - MYSQL_ROOT_PASSWORD=root
      - TZ=Europe/Madrid
      - MYSQL_DATABASE=CdO #optional
      - MYSQL_USER=apps #optional
      - MYSQL_PASSWORD=apps #optional
    # #- REMOTE_SQL=http://URL1/your.sql,https://URL2/your.sql #optional
    volumes:
      - ./mariadb/config:/config
      - ./mariadb/data:/data
    ports:
      - 3316:3316
    restart: unless-stopped
    networks:
      - 'docker-cdo-network'


networks:
  docker-cdo-network: #necesitamos crear en una red para alojar los servicios en ella y que puedan comunicarse entre sí

# Puedes agregar más servicios o configuraciones aquí si es necesario




